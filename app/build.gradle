plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "ar.com.p39.marvel_universe"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "API_KEY", apikeyProperties['API_KEY']
        buildConfigField "String", "API_SECRET", apikeyProperties['API_SECRET']

        testInstrumentationRunner "ar.com.p39.marvel_universe.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

//    kapt {
//        correctErrorTypes = true
//    }
}

task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    commandLine "adb shell pm grant ar.com.p39.marvel_universe android.permission.SET_ANIMATION_SCALE".split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connected')) {
        task.dependsOn grantAnimationPermission
    }
}

dependencies {
    def nav_version = "2.4.1"
    def paging_version = "3.1.0"

    implementation 'com.google.dagger:hilt-android:2.41'
    kapt 'com.google.dagger:hilt-compiler:2.41'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation "androidx.fragment:fragment-ktx:1.4.1"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
    }
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'

    implementation "androidx.paging:paging-runtime:$paging_version"

    implementation 'com.squareup.picasso:picasso:2.8'

    testImplementation "androidx.paging:paging-common:$paging_version"
    testImplementation "io.mockk:mockk:1.12.2"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.2"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation('com.squareup.okhttp3:mockwebserver:4.9.3') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
    }

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'

}